ja.blog = { archive: [], labels: [], pages: [], posts: [], defaults: { feedtype: "posts", wait: 4e3, cleanposts: !0, fixlinks: !0, addlinks: !0, offset: 10, xp: { class: ".blog", psxp: ".blog", archive: ".side .archive", labels: "footer .labels, .side .labels", pages: ".pages" }, links: { all: '<a style="display:inline-block;" href="/search/?q=.&max-results=999">all</a>', home: '<a style="display:inline-block;" href="javascript:ja.blog.home()">home</a>', more: '<a style="display:inline-block;" href="javascript:ja.ui.bottom()">more</a>', top: '<a style="display:inline-block;" href="javascript:ja.ui.top()">top</a>', bottom: '<a style="display:inline-block;" href="javascript:ja.ui.bottom()">top</a>' } }, options: { label: "" }, _init: !1, _initto: null, _archive: !1, _pages: !1 }, ja.blog.init = function (a) { if (ja.blog._init) ja.log.warn("ja.blog.init()already initialized", a); else { if ((a = a || {}).psxp = a.psxp || ja.blog.defaults.xp.psxp, a.captions = a.captions || !0, ja.blog.initoptions = a, ja.log.dbg("ja.blog.init()", a), !ja.text.empty(a.welcome) && "/" == document.location.pathname && !ja.cache.get("home")) return ja.log.dbg("ja.blog.init()welcome", a.welcome), ja.cache.set("lastvisit", null), ja.cache.set("welcome", !0, 6e4), void (document.location.href = a.welcome); ja.blog.feed({ type: "posts", target: ja.blog.archive, callback: function (a, t) { ja.log.dbg("ja.blog.init()cb", a, t, document.location.pathname), ja.blog._archive = !0, ja.cache.set("blog.archive", ja.blog.archive), ja.blog.digest() } }), ja.blog.feed({ type: "pages", target: ja.blog.pages, callback: function (a, t) { ja.blog._pages = !0, ja.blog.pages.sort((a, t) => a.name > t.name ? 1 : -1), ja.cache.set("blog.pages", ja.blog.pages) } }), _initto = setTimeout(function () { 0 === ja.blog.archive.length && (ja.blog.archive = ja.cache.get("blog.archive")), 0 === ja.blog.labels.length && (ja.blog.labels = ja.cache.get("blog.labels")), 0 === ja.blog.pages.length && (ja.blog.pages = ja.cache.get("blog.pages")), ja.blog._pages = 0 < ja.blog.pages.length, ja.blog._archive = 0 < ja.blog.archive.length, ja.blog._archive && ja.blog.digest() }, 5e3), ja.wait("ja.blog", function () { return !ja.blog._init && ja.blog._archive && ja.blog._pages }, function () { clearTimeout(_initto), ja.log.dbg("ja.blog.init()done", ja.blog.initoptions), ja.blog._init = !0, ja.blog.initoptions.wait = ja.blog.initoptions.wait || ja.blog.defaults.wait, ja.blog.initoptions.cleanposts = ja.blog.initoptions.cleanposts || ja.blog.defaults.cleanposts, ja.blog.initoptions.fixlinks = ja.blog.initoptions.fixlinks || ja.blog.defaults.fixlinks, ja.blog.initoptions.addlinks = ja.blog.initoptions.addlinks || ja.blog.defaults.addlinks, ja.cache.set("lastvisit", new Date, 3e5), ja.log.dbg("lastvisit=", ja.cache.get("lastvisit")), a.cleanposts && ja.blog.cleanposts(), setTimeout(function () { ja.vue.init({ mounted: function () { ja.log.dbg("ja.blog.init()vue", ja.blog.initoptions), ja.blog.initoptions.fixlinks && ja.blog.fixlinks(ja.blog.initoptions), ja.blog.render(ja.blog.initoptions), ja.blog.initoptions.callback && ja.blog.initoptions.callback() } }) }, ja.blog.initoptions.wait) }) } }, ja.blog.digest = function (a) { if (0 === ja.blog.posts.length && (document.location.href = ja.blog.initoptions.welcome), 0 === ja.text.indexof(document.location.pathname, "/search")) { if (ja.blog.options.label = "", 0 < ja.text.indexof(document.location.pathname, "/label")) { var t = document.location.pathname.split("/"); ja.blog.options.label = t[t.length - 1] } if (ja.log.dbg("ja.blog.digest()", "ja.blog.options.label=", ja.blog.options.label), ja.blog.posts.length < ja.blog.archive.length) for (var e = 0; e < ja.blog.archive.length; e++) { var l = ja.blog.archive[e], o = !1, i = !1; for (var n in l.labels = [], !ja.text.empty(ja.blog.options.label) && l.data.category || (o = !0), l.data.category) { var s = l.data.category[n].term; ja.log.dbg("ja.blog.digest", "term=", s), o || ja.blog.options.label !== s || (o = !0), l.labels.push({ name: s, url: window.location.origin + "/search/label/" + s }) } if (l.css = l.labels.map(function (a) { return a.name }).join(" "), !ja.text.empty(ja.blog.options.label) && 0 > ja.text.indexof(l.css, ja.blog.options.label) && (l.css = "hide " + l.css, o = !1), o) { for (var g = 0; g < ja.blog.posts.length; g++) { if (ja.blog.posts[g].id === l.id) { i = !0; break } } i || (ja.log.dbg("ja.blog.digest", "archive=", l, "include=", o, "found=", i), ja.blog.posts.push(l)) } } ja.cache.set("blog.labels", ja.blog.labels), ja.cache.set("blog.posts", ja.blog.posts) } for (g = 0; g < ja.blog.posts.length; g++) { var b = ja.blog.posts[g]; ja.vue.init({ id: "post" + b.id, xp: "#post" + b.id }) } }, ja.blog.feed = function (a) { ja.wait("ja.blog.feed", function () { return !ja.blog.feedoptions }, function () { (a = a || {}).start = a.start || 1, a.max = a.max || 999, a.type = a.type || ja.blog.defaults.feedtype, "label" == a.type && (a.type = ja.blog.defaults.feedtype, ja.text.empty(a.label) || (a.label = "/-/" + a.label)), a.label = a.label || "", a.key = a.type + "_" + a.label + "_" + Math.random().toString(36).substr(2, 9), ja.text.empty(a.url) && (a.url = window.location.origin + "/feeds/" + a.type + "/default" + a.label + "?alt=json&"), ja.log.dbg("ja.blog.feed()", a), ja.blog.feedoptions = a, window["feed" + a.key] = function (a) { var t = ja.blog.feedoptions; if (t) { if (ja.log.dbg("ja.blog.feed()callback", t, a), !ja.blog.labels.length) { for (var e in a.feed.category) ja.blog.labels.push({ name: a.feed.category[e].term, url: window.location.origin + "/search/label/" + a.feed.category[e].term }); ja.blog.labels.sort((a, t) => a.name > t.name ? 1 : -1) } if (ja.log.dbg("ja.blog.feed()callback", "ja.blog.labels=", ja.blog.labels), ja.log.dbg("ja.blog.feed()callback", "options.callback=", !ja.text.nul(t.callback), "options.target=", !ja.text.empty(t.target)), !ja.text.nul(t.callback) || !ja.text.empty(t.target)) { var l = t.target || []; for (var o in l.data = a, ja.log.dbg("ja.blog.feed()callback", "posts=", l), a.feed.entry) { var i = a.feed.entry[o], n = i.id.$t.split("-"), s = n[n.length - 1], g = { id: ja.text.replace(s, "post", ""), name: i.title.$t, title: i.title.$t, dateHeader: ja.text.nul(i.published) ? "" : ja.text.replace(i.published.$t.split("T")[0], "-", "."), body: ja.text.nul(i.content) ? "" : i.content.$t, data: i }; for (var b in i.link) { var j = i.link[b]; "alternate" === j.rel && (g.url = j.href.split("#")[0]), "alternate" === j.rel && (g.url = j.href.split("#")[0]) } l.push(g) } ja.log.dbg("ja.blog.feed()callback", "options.callback=", t.callback), ja.text.nul(t.callback) || t.callback(a, l) } ja.blog.feedoptions = null } else ja.log.warn("ja.blog.feed()callback: missing options", t) }, $.getScript(a.url + "callback=feed" + a.key + "&start-index=" + a.start + "&max-results=" + a.max, function () { }) }) }, ja.blog.cleanposts = function (a) { for (var t in (a = a || {}).key = a.key || "title", a.text = a.text || function (a) { return a.body() }, a.posts = a.posts || ja.blog.posts || [], ja.log.dbg("cleanposts()", "options=", a), a.blog) { var e = a.blog[t]; ja.text.empty(e[a.key]) || (e[a.key] = $("<div>" + a.text(e) + "</div>").text().trim()) } }, ja.blog.fixlinks = function (a) { a = a || {}, ja.log.dbg("ja.blog.fixlinks()", a); var t = document.location.href.split("?")[0].split("&")[0].split("#")[0]; $("a").each(function () { var a = $(this).attr("href"); if (!ja.text.empty(a)) { var e = $(this).text(); if (!ja.text.empty(e)) { var l = $(".blog .post .title").filter(function () { return e === ja.text.decode($(this).text()) }); 0 < l.length && $(this).attr("href", "#" + l.closest(".post").attr("id")), t === a ? $(this).click(function () { ja.ui.top() }) : 0 < l.length && $(this).click(function (a) { ja.event.prevent(a); var t = $($(this).attr("href")); ja.text.hash(t.attr("id"), !1), ja.ui.scroll2(t) }) } } }), $(".labels li a").each(function () { $(this).parent().addClass($(this).text()) }) }, ja.blog.wraplink = function (a, t) { var e = a; return ja.text.empty(e) ? "" : (0 > ja.text.indexOf(e, "<li>") && (e = '<li class="' + t + '">' + e + "</li>"), e) }, ja.blog.all = function (a) { a = a || {}, ja.log.dbg("ja.blog.all()", a); var t = ""; for (var e in a) { var l = a[e]; ja.log.dbg("ja.blog.all()", e, l), ja.text.empty(l) || (t = "&" + t + e + "=" + l) } document.location.href = "/search/?q=.&max-results=999" + t }, ja.blog.home = function () { ja.cache.set("home", !0, 6e4), document.location.href = "/" }, ja.blog.post = function (a) { a = a || 0, ja.log.dbg("ja.blog.post()", a, "archives=", ja.blog.archive), ja.blog.archive.length ? 0 > a && (a = 0) : ja.blog.home(), ja.blog.archive.length <= a ? ja.log.warn("ja.blog.post(): bounds", a, ">=", ja.blog.archive.length) : document.location.href = ja.blog.archive[a].url }, ja.blog.first = function () { ja.blog.post(0) }, ja.blog.last = function () { ja.blog.post(ja.blog.archive.length - 1) }, ja.blog.render = function (a) { a = a || {}, ja.log.dbg("ja.blog.render()", a), $("header, .content, .side, footer").hide(), $(".loading").removeClass("loading"), $("header").show("slow"), setTimeout(function () { $(".side.left").show("slow"), setTimeout(function () { $(".content").show("slow"), ja.photoswipe.init({ xp: a.psxp, social: a.social, captions: a.captions, scrollto: a.scrollto }), setTimeout(function () { $(".side.right, footer").show("slow"), setTimeout(function () { if (!(0 < $(".pswp__img").filter(function () { return $(this).is(":visible") }).length)) { $(document).bind("scroll", function (a) { ja.ui.options.pausescroll || $(".post").each(function () { if ($(this).offset().top < window.pageYOffset + ja.blog.defaults.offset && $(this).offset().top + $(this).height() > window.pageYOffset + ja.blog.defaults.offset) { var a = $(this).attr("id"); ja.text.empty(ja.qs2("gid")) || (a = a + "&gid=" + ja.qs2("gid")), ja.text.empty(ja.qs2("pid")) || (a = a + "&pid=" + ja.qs2("pid")), ja.text.hash(a, !1, 9e5); var t = $(".archive a").removeClass("selected").filter(function () { return "#" + a == $(this).attr("href") }).addClass("selected"), e = $(".archive.main"); 0 < t.length && e.scrollTop(e.scrollTop() + t.closest("li").position().top) } }) }); var a = ja.text.hash(); ja.text.empty(a) || "#" === a || 0 === $(a).length ? ja.ui.top() : "#more" === a ? ja.ui.bottom(0) : ja.ui.scroll2(a, 0), ja.cache.set("welcome", null), ja.cache.set("home", null) } }, 750) }, window.delay / 10) }, window.delay / 10) }, window.delay / 10) }, ja.blog.label = function (a) { a = a || {}, ja.log.dbg("ja.blog.label()", a), ja.text.nul(a.label) ? ja.log.warn("ja.blog.label(): missing label", a) : ja.text.nul(a.callback) && ja.text.nul(a.target) ? ja.log.warn("ja.blog.label(): missing target or callback", a) : (ja.blog.labeloptions = a, ja.blog.feed({ type: "label", target: a.target, label: a.label, callback: function (a, t) { ja.log.dbg("ja.blog.label()callback", ja.blog.labeloptions, a, t), ja.blog.labeloptions && ja.blog.labeloptions.callback && ja.blog.labeloptions.callback(a, t) } })) }, ja.blog.findpost = function (a) { var t = { url: a, name: ja.blog.guesspostname(a), title: ja.blog.guesspostname(a) }, e = ja.blog.archive.find(function (t, e) { return a === t.url }); return ja.text.nul(e) || (t = e), t }, ja.blog.guesspostname = function (a) { if (ja.text.empty(a)) return ""; if ("/" === a) return "home"; var t = a.split("/"); if (1 > t.length) return ""; var e = t[t.length - 1]; return e = e.split(".")[0].split("_")[0], -1 < ja.text.indexof(e, "?") ? "" : e = ja.text.replace(e, new RegExp("-", "gi"), " ") };